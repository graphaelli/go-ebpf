// bin_data.go
// MACHINE GENERATED BY THE ABOVE COMMAND; DO NOT EDIT

// Copyright 2017 Elasticsearch Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package exec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
)

var assets map[string][]byte

func asset(key string) ([]byte, error) {
	if assets == nil {
		assets = map[string][]byte{}

		var value []byte
		value, _ = base64.StdEncoding.DecodeString("H4sIAAAAAAAC/6yUP2zTQBTGPyctKSlCFUPFnw4ZGMJAiBiAAQmrEpAhQ8SAmDDGXNSKJo1sq6QJEl2QOrIgMdItY7ewpSNjRsaOjGx0QBjd3efGOdvtwpPqX9/ne37n71784XHzScGyEIeF35hlszgqzv63eV2Ghcmq1j4CuAxgXNL5cHAcSb4DUAHglXU+HJyQv8if5A9yqjg50M8pWcA0iqJxAVhhH8mJq+9fLczvcyz3uaDX3VB9db8z1y8m1//hPr6TR+Q38pAckV/JL+Qncp/cI/tkj9wgX5EvyBbZIG3yAVknqymfqvRpJHVvdi4LAHYP9H7l+5+e734U3b6is+F1fQ5j3vpMllh/In2qznv3tNXE3yhSdSvx/AyeYen9snVJ9uJfHMdZg2VEW12LmGasLaKY0h6p3hdS+j2ll1L6qtLTz7ml9MWUvnf6u4Dqcmjka4lcjVYtFP0QNV9s9YTfdsSO6IZ4s+0kso7bC+4Eoeu9dULf9UQAZ0f4weZ2F87Wpie6gVAPqIkNp+27HYFaEPqh+xq1YLcj2Vxfrzt38R/iufI1HS2KHUO3MvLYi2TYOf0WjPzaOfXmzCwZ6+QJX8zoU+H+K8zLfM+4Pp7Xm+xvelDhd2LtnP3bOfUPC9nrTf/u59TbOfVm3kzOXiIaFOo4279Gjn92cd6nMmtN/15m9JbRpzhKvHfS//i78A8AAP//AQAA//+tXHi7gAYAAA==")
		value, _ = gzipDecode(value)
		assets["exec.o"] = value
	}

	if value, found := assets[key]; found {
		return value, nil
	}
	return nil, fmt.Errorf("asset not found for key=%v", key)
}

func gzipDecode(data []byte) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewReader(data))
	if err != nil {
		return nil, err
	}

	out := new(bytes.Buffer)
	if _, err = io.Copy(out, gz); err != nil {
		return nil, err
	}

	return out.Bytes(), nil
}
